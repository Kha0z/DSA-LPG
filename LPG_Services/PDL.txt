1617517, 1617658

This document defines the PDL (pseudocode) of the entire program, in which some 
are seperated into subroutines (aka functions) for increased readability

Purpose:
Our client is UNO Gas Services Pty. Ltd.
LPG can types: 12.7kg, 14kg, 50kg
Customer types: households or establishment
Allows admin to store name, addr and other info (like order qty?) of regular customers
Keeps track of the type of customer and the products they order
The operator of the software keys in the order by customer, allow op to look up product and unit price
Must produce receipt upon order completion
Keep track of LPG in stock of each type

Datatypes to program for:
Customer (customer ID, customer type, name, address, past history??) -> Program a "customer console" to manage them
LPG counter to count for each type of LPG bought -> Add variables for all 3 types of LPG cans
Order (customer ID, 12.7kg count, 14kg count, 50kg count) -> Program a "order mode" to generate orders, 
															 deduct inventory and produce receipts,
															 making sure to display the product price when ordering

>> Starting point of the program, allows the user to log in
SUBROUTINE Init_Mode returns true or false
	OUTPUT initial message and "Do you want to log into the console (y/n): "
	SET input_char to null character
	DO WHILE input_char is not 'y' and not 'n'
		SET input_char to INPUT
		SET input_char to lower case
		IF input_char is not 'y' and not 'n'
			OUTPUT invalid input error message
		ENDIF
	ENDDO WHILE
	IF input_char is 'y'
		RETURN true
	ELSE
		RETURN false
	ENDIF
ENDSUBROUTINE

>> Provides a console experience: 
>> LIST->List all customer records
>> HISTORY <customerID>->Lists order history
>> DELETE <customerID>->Deletes customer
>> NEW->Adds a new customer to the database
>> ORDER <customerID>->Adds a new order to the customer, and later produces a receipt
>> QUANTITY->Shows the quantity of LPG canisters left in the company inventory
>> HELP->Shows the help file
>> EXIT->Returns to the previous menu
SUBROUTINE Command_Mode
	OUTPUT initial message here
	DO WHILE input_buffer is not 'EXIT'
		OUTPUT "> "
		SET input_buffer to INPUT
		IF input_buffer is "LIST"
			list all customer details
		ELSEIF input_buffer is "HISTORY <customerID>"
			list history of said customerID
		ELSEIF input_buffer is "DELETE <customerID>"
			OUTPUT text prompting the user are you sure
			DO WHILE c is not 'y' or 'n'
				SET c to INPUT
				IF c is not 'y' or 'n'
					OUTPUT invalid input
				ENDIF
			ENDDDO WHILE
			IF c is 'y'
				delete the history of the customer
			ENDIF
		ELSEIF input_buffer is "NEW"
			CALL New_Customer
		ELSEIF input_buffer is "ORDER <customerID>"
			CALL Order(<customerID>)
		ELSEIF input_buffer is "QUANTITY"
			CALL Quantity()
		ELSEIF input_buffer is "HELP"
			CALL Display_Help()
		ELSEIF input_buffer is not "EXIT"
			OUTPUT invalid command
		ENDIF
	ENDDO WHILE
ENDSUBROUTINE


Sample history JSON file:
[
	{
		"12.7kg": 0,
		"14kg": 1,
		"50kg": 0,
		"createdDate": 1518350364
	},
	{
		"12.7kg": 0,
		"14kg": 1,
		"50kg": 0,
		"createdDate": 1518350364
	}
]

Sample inventory.csv: 1st row is stock, 2nd row is price
5;5;5
10.0;20.0;50.0
